// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: readcommend.proto

package readcommend

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Book struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	YearPublished uint32                 `protobuf:"varint,3,opt,name=yearPublished,proto3" json:"yearPublished,omitempty"`
	Rating        float64                `protobuf:"fixed64,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Pages         uint32                 `protobuf:"varint,5,opt,name=pages,proto3" json:"pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Book) Reset() {
	*x = Book{}
	mi := &file_readcommend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_readcommend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_readcommend_proto_rawDescGZIP(), []int{0}
}

func (x *Book) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Book) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Book) GetYearPublished() uint32 {
	if x != nil {
		return x.YearPublished
	}
	return 0
}

func (x *Book) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Book) GetPages() uint32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type Author struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string                 `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName      string                 `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Author) Reset() {
	*x = Author{}
	mi := &file_readcommend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_readcommend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_readcommend_proto_rawDescGZIP(), []int{1}
}

func (x *Author) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Author) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Author) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type Genre struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Genre) Reset() {
	*x = Genre{}
	mi := &file_readcommend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_readcommend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_readcommend_proto_rawDescGZIP(), []int{2}
}

func (x *Genre) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Genre) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetGenresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Genre         []*Genre               `protobuf:"bytes,1,rep,name=genre,proto3" json:"genre,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGenresResponse) Reset() {
	*x = GetGenresResponse{}
	mi := &file_readcommend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGenresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenresResponse) ProtoMessage() {}

func (x *GetGenresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_readcommend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenresResponse.ProtoReflect.Descriptor instead.
func (*GetGenresResponse) Descriptor() ([]byte, []int) {
	return file_readcommend_proto_rawDescGZIP(), []int{3}
}

func (x *GetGenresResponse) GetGenre() []*Genre {
	if x != nil {
		return x.Genre
	}
	return nil
}

var File_readcommend_proto protoreflect.FileDescriptor

const file_readcommend_proto_rawDesc = "" +
	"\n" +
	"\x11readcommend.proto\x12\vreadcommend\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\x80\x01\n" +
	"\x04Book\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12$\n" +
	"\ryearPublished\x18\x03 \x01(\rR\ryearPublished\x12\x16\n" +
	"\x06rating\x18\x04 \x01(\x01R\x06rating\x12\x14\n" +
	"\x05pages\x18\x05 \x01(\rR\x05pages\"R\n" +
	"\x06Author\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1c\n" +
	"\tfirstName\x18\x02 \x01(\tR\tfirstName\x12\x1a\n" +
	"\blastName\x18\x03 \x01(\tR\blastName\"-\n" +
	"\x05Genre\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\"=\n" +
	"\x11GetGenresResponse\x12(\n" +
	"\x05genre\x18\x01 \x03(\v2\x12.readcommend.GenreR\x05genre2q\n" +
	"\x12ReadCommendService\x12[\n" +
	"\tGetGenres\x12\x16.google.protobuf.Empty\x1a\x1e.readcommend.GetGenresResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v1/genresB'Z%github.com/BastianEscaich/readcommendb\x06proto3"

var (
	file_readcommend_proto_rawDescOnce sync.Once
	file_readcommend_proto_rawDescData []byte
)

func file_readcommend_proto_rawDescGZIP() []byte {
	file_readcommend_proto_rawDescOnce.Do(func() {
		file_readcommend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_readcommend_proto_rawDesc), len(file_readcommend_proto_rawDesc)))
	})
	return file_readcommend_proto_rawDescData
}

var file_readcommend_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_readcommend_proto_goTypes = []any{
	(*Book)(nil),              // 0: readcommend.Book
	(*Author)(nil),            // 1: readcommend.Author
	(*Genre)(nil),             // 2: readcommend.Genre
	(*GetGenresResponse)(nil), // 3: readcommend.GetGenresResponse
	(*emptypb.Empty)(nil),     // 4: google.protobuf.Empty
}
var file_readcommend_proto_depIdxs = []int32{
	2, // 0: readcommend.GetGenresResponse.genre:type_name -> readcommend.Genre
	4, // 1: readcommend.ReadCommendService.GetGenres:input_type -> google.protobuf.Empty
	3, // 2: readcommend.ReadCommendService.GetGenres:output_type -> readcommend.GetGenresResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_readcommend_proto_init() }
func file_readcommend_proto_init() {
	if File_readcommend_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_readcommend_proto_rawDesc), len(file_readcommend_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_readcommend_proto_goTypes,
		DependencyIndexes: file_readcommend_proto_depIdxs,
		MessageInfos:      file_readcommend_proto_msgTypes,
	}.Build()
	File_readcommend_proto = out.File
	file_readcommend_proto_goTypes = nil
	file_readcommend_proto_depIdxs = nil
}
